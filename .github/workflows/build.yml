name: build PDF
on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:  # allows manual running of the workflow
  
jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set-matrix.outputs.projects }}
    steps:
      - uses: actions/checkout@v5
      - id: set-matrix
        run: |
          projects=$(find . -type f -name 'main.tex' -exec dirname {} \;)
          json=$(echo "$projects" | jq -R -s -c 'split("\n") - [""]')
          echo "projects=$json" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: discover
    strategy:
      matrix:
        project: ${{ fromJson(needs.discover.outputs.projects) }}
    permissions:
      contents: write  # needed for creating releases
    steps:
      - uses: actions/checkout@v5
      # Set up Mise
      - uses: jdx/mise-action@v3
      # Install tex packages
      - name: Install TeX packages
        run: mise run install-tex-packages
      - name: Build PDF for ${{ matrix.project }}
        run: |
          cd "${{ matrix.project }}"
          mise run build
      # Set pdf name based on project path
      - name: Rename and move PDF
        id: rename-pdf
        run: |
          project_path="${{ matrix.project }}"
          if [ "$project_path" = "." ]; then
            pdf_name="${{ github.event.repository.name }}.pdf"
          else
            pdf_name="$(basename "$project_path").pdf"
          fi
          mkdir -p artifacts
          mv "$project_path/build/main.pdf" "artifacts/$pdf_name"
          echo "pdf_name=$pdf_name" >> $GITHUB_OUTPUT
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.rename-pdf.outputs.pdf_name }}
          path: artifacts/*.pdf

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write  # needed for creating releases
    steps:
      - uses: actions/checkout@v5
      - name: Tag as latest if on main branch
        if: github.ref_name == 'main'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag -f latest
          git push origin latest --force
      - name: Download built PDFs
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*.pdf'
      # Create or update release and upload PDF
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          target_commitish: ${{ github.sha }}
          files: artifacts/*.pdf
